<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta lang="en">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css">

  <!-- Custom styles for this template -->
  <link href="/styles/styles.css" rel="stylesheet">

  <title>Home Page</title>
</head>

<body>
  {{{body}}}

  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

  <script src="/js/index.js"></script>
  <script type="text/javascript">
    $(document).ready(function () {
      // Create an initial toDoCount variable
      var MedCount = 0;
      //  On Click event associated with the add-to-do function
      $("#add-med-list").on("click", function (event) {
        event.preventDefault();
        // Get the to-do "value" from the textbox and store it a variable
        var medListTask = $("#med-list").val().trim();
        // Create a new variable that will hold a "<p>" tag.
        // Then give it an ID in the following form:
        // "item-4" or "item-3" or "item-99", where the number is equal to toDoCount.
        // Then set the to-do "value" as text to this <p> element.
        var medItem = $("<p>");
        medItem.attr("id", "item-" + MedCount);
        medItem.text(medListTask);
        // Create a button with unique identifiers based on what number it is in the list. Again use jQuery to do this.
        // Give your button a data attribute called data-to-do and a class called "checkbox".
        // Lastly add a checkmark inside.
        var medClose = $("<button>");
        medClose.attr("data-to-do", MedCount);
        medClose.addClass("checkbox");
        medClose.text("âœ“");
        // Append the button to the to do item


        medItem = medItem.prepend(medClose);
        // Add the button and to do item to the to-dos div
        $("#medList").append(medItem);
        // Clear the textbox when done
        $("#med-list").val("");
        // Add to the toDoCount
        MedCount++;
      });
      // When a user clicks a check box then delete the specific content
      // (NOTE: Pay attention to the unusual syntax here for the click event.
      // Because we are creating click events on "dynamic" content, we can't just use the usual "on" "click" syntax.)
      $(document.body).on("click", ".checkbox", function () {
        // Get the number of the button from its data attribute and hold in a variable called  toDoNumber.
        var toDoNumber = $(this).attr("data-to-do");
        // Select and Remove the specific <p> element that previously held the to do item number.
        $("#item-" + toDoNumber).remove();
      });

    })

  </script>
</body>

</html>